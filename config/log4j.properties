log4j.rootLogger=INFO,Console,File,DB

log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%c]%m%n

log4j.appender.File=org.apache.log4j.RollingFileAppender 
log4j.appender.File.File=mybatis.log
log4j.appender.File.MaxFileSize=10MB
log4j.appender.File.Threshold=ALL
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH\:mm\:ss,SSS}][%c]%m%n

log4j.rootLogger=DEBUG,DB
log4j.appender.DB=org.apache.log4j.jdbc.JDBCAppender
# Set JDBC URL
log4j.appender.DB.URL=jdbc:mysql://localhost:3306/test
# Set Database Driver
# 日志的错误级别
log4j.appender.MAIL.Threshold=ERROR
log4j.appender.DB.driver=com.mysql.jdbc.Driver
# Set database user name and password
log4j.appender.DB.user=root
log4j.appender.DB.password=root
# Set the SQL statement to be executed.
log4j.appender.DB.sql=INSERT INTO LOGS VALUES('%x','%d','%C','%p','%m')
# Define the layout for file appender
log4j.appender.DB.layout=org.apache.log4j.PatternLayout

## MAIL
log4j.rootLogger=ERROR,MAIL

log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender
#日志的错误级别
log4j.appender.MAIL.Threshold=ERROR
#缓存文件大小，日志达到512K时发送Email
log4j.appender.MAIL.BufferSize=1
发送邮件的服务器
log4j.appender.MAIL.SMTPHost=smtp.qq.com
#邮件主题
log4j.appender.MAIL.Subject=ErrorMessage
#发送邮件箱的用户
log4j.appender.MAIL.SMTPUsername=gujt@thinkive.com
#发送邮件箱的密码
log4j.appender.MAIL.SMTPPassword=Gutao1111
#发送邮件箱
log4j.appender.MAIL.From=gujt@thinkive.com
#接受邮件箱
log4j.appender.MAIL.To=1093656744@qq.com
log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout

#%c 输出日志信息所属的类的全名 
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18- 22：10：28 
#%f 输出日志信息所属的类的类名 
#%l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行 
#%m 输出代码中指定的信息，如log(message)中的message 
#%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n” 
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推 
#%r 输出自应用启动到输出该日志信息所耗费的毫秒数 
#%t 输出产生该日志事件的线程名