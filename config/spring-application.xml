<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:tx="http://www.springframework.org/schema/tx" 
 xmlns:aop="http://www.springframework.org/schema/aop" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
">

  <description>Spring公共配置</description>
  
  <!--1.配置数据源，这里用的是c3p0 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       <property name="driverClass" value="com.mysql.jdbc.Driver" />
       <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/test" />
       <property name="user" value="root" />
       <property name="password" value="root" />
  </bean>
     <!--2.mybatis的SqlsessionFactory： SqlsessionFactoryBean
           dataSource:引用数据源
           typeAliasesPackage：指定实体类的包名，自动将实体的简单类名映射成别名
           mapperLocations：扫描sql映射文件    
             -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     <property name="dataSource" ref="dataSource"/>
     <property name="typeAliasesPackage" value="MybatisTest2.model"/>
     <property name="mapperLocations" value="classpath:MybatisTest2/mapping/*.xml" />
  </bean>
  <!-- 3.mybatis自动扫描加载sql的映射文件/接口(这里我扫描的是接口，映射文件在上面已经做了)：MapperScannerConfigurer
     basePackage：指定sql映射文件/接口所在的包，能动自动扫描，对用了@Autowired标签的自动注入
     sqlSessionFactory：引用之前定义好的sqlsessionFactory
    -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="basePackage" value="MybatisTest2.dao"/>
     <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
  </bean>
  	<!--4. 配置事务管理器 ：DataSourceTransactionManager-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 5. 注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" /> 
</beans>